{"version":3,"sources":["reportWebVitals.js","index.js","App.js","blockly/blockly_init.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","App","document","getElementById","BlocklyInit","useState","workspace","setWorkspace","blocklyRef","React","createRef","toolbox","useEffect","Blockly","inject","current","runCode","code","javascript","workspaceToCode","template","console","log","eval","className","onClick","style","height","width","ref","defineBlocksWithJsonArray","JavaScript","block"],"mappings":"2OAYeA,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACC,EAAA,EAAD,MAEFC,SAASC,eAAe,SAM1Bd,K,2tCCVA,SAASY,MACPG,+DACA,cAAgCC,oDAAS,IAAzC,yNAAKC,UAAL,cAAgBC,aAAhB,cACIC,WAAaC,6CAAMC,YACnBC,QAAU,CACZ,KAAQ,kBACR,SAAY,CACV,CACE,KAAQ,WACR,KAAQ,UACR,SAAY,CACV,CACE,KAAQ,QACR,KAAQ,eAEV,CACE,KAAQ,QACR,KAAQ,uBAEV,CACE,KAAQ,QACR,KAAQ,gBAEV,CACE,KAAO,QACP,KAAO,kBAIb,CACE,KAAQ,WACR,KAAQ,QACR,SAAY,CACV,CACE,KAAQ,QACR,KAAQ,iBAEV,CACE,KAAQ,QACR,KAAQ,mBAEV,CACE,KAAQ,QACR,KAAQ,qBASlBC,sDAAU,WACRL,aAAaM,+CAAQC,OAAON,WAAWO,QAAQ,CAACJ,qBAChD,IAKF,IAAMK,QAAU,SAAVA,UACJ,IAAIC,KAAQC,0DAAWC,gBAAgBb,WACnCc,SAAW,wCAA0CH,KAAO,2BAChEI,QAAQC,IAAIF,UACZG,KAAKH,WAGP,OACE,mEAAKI,UAAU,MAAf,UACE,qEAAQC,QAAUT,QAAlB,sBACA,kEAAKU,MAAO,CAACC,OAAO,QAASC,MAAM,UAAWC,IAAKrB,gBAK1CP,2B,+BChFf,2DAGe,SAASG,IAEtBS,IAAQiB,0BAA0B,CAAC,CACjC,KAAQ,eACR,SAAY,wFACZ,kBAAqB,KACrB,cAAiB,KACjB,OAAU,IACV,QAAW,wJACX,QAAW,IAEb,CACE,KAAQ,cACR,SAAY,kFACZ,kBAAqB,KACrB,cAAiB,KACjB,OAAU,IACV,QAAW,+JACX,QAAW,IAEb,CACE,KAAQ,eACR,SAAY,wFACZ,kBAAqB,KACrB,cAAiB,KACjB,OAAU,IACV,QAAW,qKACX,QAAW,MAGbjB,IAAQkB,WAAR,aAAqC,SAASC,GAE5C,MADW,2BAIbnB,IAAQkB,WAAR,YAAoC,SAASC,GAG3C,MADW,0BAIbnB,IAAQkB,WAAR,aAAqC,SAASC,GAG5C,MADW,8B","file":"static/js/main.3f0fe28d.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import React, {useEffect, useState} from \"react\";\nimport Blockly from 'blockly'\nimport './App.css';\nimport BlocklyInit from \"./blockly/blockly_init\";\nimport javascript from \"blockly/javascript\";\n\nfunction App() {\n  BlocklyInit();\n  let [workspace, setWorkspace] = useState({});\n  let blocklyRef = React.createRef();\n  let toolbox = {\n    \"kind\": \"categoryToolbox\",\n    \"contents\": [\n      {\n        \"kind\": \"category\",\n        \"name\": \"Control\",\n        \"contents\": [\n          {\n            \"kind\": \"block\",\n            \"type\": \"controls_if\"\n          },\n          {\n            \"kind\": \"block\",\n            \"type\": \"controls_whileUntil\"\n          },\n          {\n            \"kind\": \"block\",\n            \"type\": \"controls_for\"\n          },\n          {\n            \"kind\":\"block\",\n            \"type\":\"move_forward\"\n          }\n        ]\n      },\n      {\n        \"kind\": \"category\",\n        \"name\": \"Logic\",\n        \"contents\": [\n          {\n            \"kind\": \"block\",\n            \"type\": \"logic_compare\"\n          },\n          {\n            \"kind\": \"block\",\n            \"type\": \"logic_operation\"\n          },\n          {\n            \"kind\": \"block\",\n            \"type\": \"logic_boolean\"\n          }\n        ]\n      }\n    ]\n  }\n\n  \n  \n  useEffect(()=>{\n    setWorkspace(Blockly.inject(blocklyRef.current,{toolbox}));\n  },[]);\n\n  \n  \n\n  const runCode = ()=>{\n    let code =  javascript.workspaceToCode(workspace); \n    let template = \"async function ExecuteCodeAsync() {\\n\" + code + \"\\n}\\nExecuteCodeAsync();\"\n    console.log(template);\n    eval(template);\n  }\n  \n  return (\n    <div className=\"App\">\n      <button onClick ={runCode}>Run Code</button>\n      <div style={{height:\"900px\", width:\"1000px\"}} ref={blocklyRef}></div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\r\nimport Blockly from 'blockly';\r\n\r\nexport default function BlocklyInit(){\r\n\r\n  Blockly.defineBlocksWithJsonArray([{\r\n    \"type\": \"move_forward\",\r\n    \"message0\": \"Премести Напред\",\r\n    \"previousStatement\": null,\r\n    \"nextStatement\": null,\r\n    \"colour\": 230,\r\n    \"tooltip\": \"Премества дрона 1 поле напред\",\r\n    \"helpUrl\": \"\"\r\n  },\r\n  {\r\n    \"type\": \"rotate_left\",\r\n    \"message0\": \"Завърти Наляво\",\r\n    \"previousStatement\": null,\r\n    \"nextStatement\": null,\r\n    \"colour\": 230,\r\n    \"tooltip\": \"Завърта дрона 90 градуса наляво\",\r\n    \"helpUrl\": \"\"\r\n  },\r\n  {\r\n    \"type\": \"rotate_right\",\r\n    \"message0\": \"Завърти Надясно\",\r\n    \"previousStatement\": null,\r\n    \"nextStatement\": null,\r\n    \"colour\": 230,\r\n    \"tooltip\": \"Завърта дрона 90 градуса надясно\",\r\n    \"helpUrl\": \"\"\r\n  }])\r\n\r\n  Blockly.JavaScript['move_forward'] = function(block) {\r\n    var code = 'await move_forward();\\n';\r\n    return code;\r\n  };\r\n  \r\n  Blockly.JavaScript['rotate_left'] = function(block) {\r\n\r\n    var code = 'await rotate_left();\\n';\r\n    return code;\r\n  };\r\n  \r\n  Blockly.JavaScript['rotate_right'] = function(block) {\r\n    \r\n    var code = 'await rotate_right();\\n';\r\n    return code;\r\n  };\r\n}"],"sourceRoot":""}