{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","blocklyRef","React","createRef","toolbox","useEffect","Blockly","inject","current","className","style","height","width","ref","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mQA2DeA,MAvDf,WACE,IAAIC,EAAaC,IAAMC,YACnBC,EAAU,CACZ,KAAQ,kBACR,SAAY,CACV,CACE,KAAQ,WACR,KAAQ,UACR,SAAY,CACV,CACE,KAAQ,QACR,KAAQ,eAEV,CACE,KAAQ,QACR,KAAQ,uBAEV,CACE,KAAQ,QACR,KAAQ,kBAId,CACE,KAAQ,WACR,KAAQ,QACR,SAAY,CACV,CACE,KAAQ,QACR,KAAQ,iBAEV,CACE,KAAQ,QACR,KAAQ,mBAEV,CACE,KAAQ,QACR,KAAQ,qBAWlB,OAJAC,qBAAU,WACQC,IAAQC,OAAON,EAAWO,QAAQ,CAACJ,eAInD,qBAAKK,UAAU,MAAf,SACE,qBAAKC,MAAO,CAACC,OAAO,QAASC,MAAM,UAAWC,IAAKZ,OC1C1Ca,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.c550276e.chunk.js","sourcesContent":["import React, {useEffect} from \"react\";\nimport Blockly from 'blockly'\nimport './App.css';\n\nfunction App() {\n  let blocklyRef = React.createRef();\n  let toolbox = {\n    \"kind\": \"categoryToolbox\",\n    \"contents\": [\n      {\n        \"kind\": \"category\",\n        \"name\": \"Control\",\n        \"contents\": [\n          {\n            \"kind\": \"block\",\n            \"type\": \"controls_if\"\n          },\n          {\n            \"kind\": \"block\",\n            \"type\": \"controls_whileUntil\"\n          },\n          {\n            \"kind\": \"block\",\n            \"type\": \"controls_for\"\n          }\n        ]\n      },\n      {\n        \"kind\": \"category\",\n        \"name\": \"Logic\",\n        \"contents\": [\n          {\n            \"kind\": \"block\",\n            \"type\": \"logic_compare\"\n          },\n          {\n            \"kind\": \"block\",\n            \"type\": \"logic_operation\"\n          },\n          {\n            \"kind\": \"block\",\n            \"type\": \"logic_boolean\"\n          }\n        ]\n      }\n    ]\n  }\n  \n  useEffect(()=>{\n    let workspace = Blockly.inject(blocklyRef.current,{toolbox});\n  });\n  \n  return (\n    <div className=\"App\">\n      <div style={{height:\"900px\", width:\"1000px\"}} ref={blocklyRef}></div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}